@page
@model SimulatorTrade.Pages.Simulate.PlaybackModel
@{
    ViewData["Title"] = "Viaje al pasado";
}
<h1>Simulación: Viaje al pasado</h1>
<form method="post" class="card">
  <div class="row"><label>Símbolo</label><input asp-for="Input.Symbol" /></div>
  <div class="row"><label>Meses atrás</label><input asp-for="Input.MonthsBack" type="number" min="1" /></div>
  <div class="row"><label>Intervalo</label><input asp-for="Input.Interval" value="1m" /></div>
  <div class="row"><label>Velocidad x</label><input asp-for="Input.SpeedMultiplier" type="number" step="0.1" min="0.1" value="1" /></div>
  <button class="btn" type="submit">Aplicar</button>
  @if (!string.IsNullOrWhiteSpace(Model.Message)){<p class="muted">@Model.Message</p>}
</form>

<div class="card">
  <h2>Ticker (playback)</h2>
  <p>Únete al canal "playback" para recibir ticks históricos.</p>
  <canvas id="pbChart"></canvas>
</div>

@section Scripts {
<script>
const conn = new signalR.HubConnectionBuilder().withUrl('/hubs/market').build();
let chart;
function setup(){
  const ctx = document.getElementById('pbChart').getContext('2d');
  chart = new Chart(ctx, {type:'line', data:{labels:[], datasets:[{label:'Playback', data:[]}]},
    options:{animation:false, scales:{x:{display:false}}}});
}
conn.on('Tick', (tick)=>{
  if (tick.mode !== 'playback') return;
  chart.data.labels.push(new Date(tick.time).toLocaleTimeString());
  chart.data.datasets[0].data.push(tick.price);
  if (chart.data.labels.length>200){chart.data.labels.shift(); chart.data.datasets[0].data.shift();}
  chart.update();
});
conn.start().then(()=> conn.invoke('Join','playback'));
document.addEventListener('DOMContentLoaded', setup);
</script>
}
